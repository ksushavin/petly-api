{
    "openapi": "3.0.1",
    "info": {
        "version": "2.0.2",
        "title": "Swagger test",
        "description": "Showing off swagger-ui-express",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "servers": [{ "url": "http://localhost:3000" }],
    "tags": [
        {
            "name": "Auth",
            "description": "Authorization endpoints"
        },
        {
            "name": "Services-sidebar",
            "description": "Partner contact information endpoints"
        },
        {
            "name": "News",
            "description": "News endpoints"
        },
        {
            "name": "Notices",
            "description": "Notices endpoints"
        },
        {
            "name": "User",
            "description": "User endpoints"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                     "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User login",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Login's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/auth/edit": {
            "patch": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "409": {
                        "description": "Provided email already exists",
                        "content": {}
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "User logout",
                "parameters": [{
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "security": [{ "Bearer": [] }],
                "requestBody": {},
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        },
        "/friends": {
            "get": {
                "tags": ["Friends"],
                "summary": "Partner contact information",
                "parameters": [],
                "security": [{ "Bearer": [] }],

                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/news": {
            "get": {
                "tags": ["News"],
                "summary": "News list",
                "parameters": [],
                "security": [{ "Bearer": [] }],

                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },
        "/notices/sell": {
            "get": {
                "tags": ["Notices"],
                "summary": "Sale advertisements",
                "parameters": [],
                "security": [{ "Bearer": [] }],

                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SellNoticesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "User's token"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    }
                }
            },
            "FriendItem": {
                "type": "object",
                "properties": {
                    "title": {
                      "type": "string",
                      "description": "Company's name",
                      "example": "Happy Paw"
                    },
                    "addressUrl": {
                      "type": "string",
                      "description": "Company's website",
                      "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "Company's avatar",
                      "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
                    },
                    "address": {
                      "type": "string",
                      "description": "Company's address",
                      "example": "Fedorivka, Kyiv Oblast, Ukraine, 07372"
                    },
                    "workDays": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "isOpen": {
                                    "type": "boolean",
                                    "description": "Working day"
                                },
                                "from": {
                                    "type": "string",
                                    "description": "Opening time"
                                },
                                "to": {
                                    "type": "string",
                                    "description": "Close time"
                                }
                            }
                        },
                        "example": [
                            { "isOpen": true, "from": "09:00", "to": "17:00" },
                            { "isOpen": true, "from": "09:00", "to": "17:00" }
                        ]
                    },  
                    "phone": {
                      "type": "number",
                      "description": "Company's phone number",
                      "example": "+380442900329"
                    },
                    "email": {
                      "type": "string",
                      "description": "Company's email",
                      "example": "hello@happypaw.ua"
                    }
                }
            },
            "FriendsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/FriendItem"
                }   
            },
            "NewsItem": {
                "type": "object",
                "properties": {
                    "title": {
                      "type": "string",
                      "description": "Article's title"
                    },
                    "url": {
                      "type": "string",
                      "description": "Article source",
                      "example": "https://goo.gl/maps/iq8NXEUf31EAQCzc6"
                    },
                    "description": {
                      "type": "string",
                      "description": "Article's text"
                    },
                    "date": {
                      "type": "string",
                      "description": "Article publication date",
                      "example": "2022-08-12"
                    }
                }
            },
            "NewsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/NewsItem"
                }   
            },
            "SellNoticesItem": {
                "type": "object",
                "properties": {
                    "title": {
                      "type": "string",
                      "description": "Sell advertisement title",
                      "example": "Сute dog looking for a home"
                    },
                    "breed": {
                      "type": "string",
                      "description": "Breed of a pet",
                      "example": "Pomeranian"
                    },
                    "imageUrl": {
                      "type": "string",
                      "description": "Sell advertisement avatar",
                      "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
                    },
                    "age": {
                      "type": "string",
                      "description": "Age of a pet",
                      "example": "one year"
                    },
                    "price": {
                      "type": "string",
                      "description": "Sell advertisement price",
                      "example": "50$"
                    }
                }
            },
            "SellNoticesResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SellNoticesItem"
                }   
            }
        },
        
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}




